---
import aiTools from '../../public/ai-tools.json' assert { type: 'json' };
const categories = [...new Set(aiTools.map((tool: any) => tool.category))];

const capitalize = (str: string) => {
  return str
    .split('_')
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
    .join(' ');
};
---

<div class="relative">
  <button
    id="categoryButton"
    class="w-full flex items-center justify-between p-2 text-sm text-gray-600 bg-white
           border border-gray-200 rounded-lg hover:bg-gray-100">
    <div class="flex items-center gap-2">
      <span class="material-icons text-sm">category</span>
      <span class="text-sm font-medium">Categories</span>
    </div>
    <span
      class="material-icons transition-transform duration-200"
      id="dropdownArrow">expand_more</span
    >
  </button>

  <div
    id="categoryDropdown"
    class="absolute z-10 w-full mt-1 hidden bg-white border border-gray-200 rounded-lg shadow-lg">
    <div class="grid grid-cols-1 gap-1 p-2">
      {
        categories.map((category) => (
          <div
            class="px-4 py-2 text-sm text-gray-700 hover:bg-indigo-50 rounded-md 
                    cursor-pointer transition-colors">
            {capitalize(category)}
          </div>
        ))
      }
    </div>
  </div>
</div>

<script>
  const button = document.getElementById('categoryButton');
  const dropdown = document.getElementById('categoryDropdown');
  const arrow = document.getElementById('dropdownArrow');

  button?.addEventListener('click', () => {
    dropdown?.classList.toggle('hidden');
    arrow?.classList.toggle('rotate-180');
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (
      !target.closest('#categoryButton') &&
      !dropdown?.classList.contains('hidden')
    ) {
      dropdown?.classList.add('hidden');
      arrow?.classList.remove('rotate-180');
    }
  });
</script>
