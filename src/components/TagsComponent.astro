---
import aiTools from '../../public/ai-tools.json' assert { type: 'json' };
// Flatten the tags array and remove duplicates
const tags = [...new Set(aiTools.flatMap((tool: any) => tool.tags || []))];
const initialTagCount = 6; // Show first 6 tags initially
---

<div class="flex flex-wrap gap-2 mb-6 items-center">
  {
    tags
      .slice(0, initialTagCount)
      .map((tag) => (
        <button class="px-3 py-1.5 text-sm text-gray-600 bg-indigo-200 border border-indigo-400 rounded-full hover:bg-indigo-200 transition-colors capitalize">
          {tag}
        </button>
      ))
  }
  {
    tags.length > initialTagCount && (
      <button
        id="showMoreTags"
        class="px-3 py-1.5 text-sm text-indigo-600 hover:text-indigo-700  font-medium transition-colors flex items-center gap-1">
        More
        <span class="material-icons text-sm">expand_more</span>
      </button>
    )
  }
  <div id="remainingTags" class="hidden flex-wrap gap-2">
    {
      tags
        .slice(initialTagCount)
        .map((tag) => (
          <button class="px-3 py-1.5 text-sm text-gray-600 bg-gray-100 rounded-full bg-indigo-200 border border-indigo-400  hover:bg-gray-200 transition-colors capitalize">
            {tag}
          </button>
        ))
    }
  </div>
</div>

<script>
  const showMoreBtn = document.getElementById('showMoreTags');
  const remainingTags = document.getElementById('remainingTags');

  showMoreBtn?.addEventListener('click', () => {
    remainingTags?.classList.toggle('hidden');
    remainingTags?.classList.toggle('flex');

    const icon = showMoreBtn.querySelector('.material-icons');
    const text = showMoreBtn.childNodes[0];

    if (remainingTags?.classList.contains('hidden')) {
      text.textContent = 'More ';
      icon!.textContent = 'expand_more';
    } else {
      text.textContent = 'Less ';
      icon!.textContent = 'expand_less';
    }
  });
</script>
