---
import aiTools from '../assets/data/ai-tools.json' assert { type: 'json' };
import { tagGroups } from '../utils/constants';

// Get all unique tags from tools
const allTags = [...new Set(aiTools.flatMap((tool: any) => tool.tags || []))];

// Count how many tools use each tag
const tagCounts = allTags.reduce((acc, tag) => {
  acc[tag] = aiTools.filter((tool) => tool.tags.includes(tag)).length;
  return acc;
}, {} as Record<string, number>);

// Count total tools per group
const groupCounts = Object.entries(tagGroups).reduce((acc, [group, tags]) => {
  const uniqueToolsInGroup = new Set(
    aiTools.filter(tool => 
      tool.tags.some(tag => tags.includes(tag))
    ).map(tool => tool.id)
  );
  acc[group] = uniqueToolsInGroup.size;
  return acc;
}, {} as Record<string, number>);
---

<div class="flex flex-col gap-4 mb-6">
  <!-- Tag Groups Section -->
  <div class="flex flex-wrap gap-3">
    {Object.entries(tagGroups).map(([group, groupTags]) => (
      <div class="group-container">
        <button
          class="tag-group-button px-4 py-2 text-base font-medium text-indigo-700 
                 bg-gradient-to-r from-indigo-150 to-indigo-250 
                 border border-indigo-300 shadow-sm rounded-lg
                 hover:from-indigo-200 hover:to-indigo-300 hover:text-indigo-800 
                 transition-all duration-300 flex items-center gap-2"
          data-group={group}
        >
          <span class="capitalize">{group}</span>
          <span class="bg-indigo-400/20 px-2 py-0.5 rounded-full text-sm text-indigo-700">
            {groupCounts[group]}
          </span>
        </button>
        
        <!-- Dropdown content -->
        <div class="tag-dropdown hidden absolute z-10 mt-2 w-max bg-indigo-300/90 
                    backdrop-blur-sm rounded-lg shadow-lg border border-indigo-400 py-3 px-4">
          <div class="grid grid-cols-2 gap-2">
            {groupTags.map(tag => (
              allTags.includes(tag) && (
                <button
                  class="tag-button text-left px-3 py-1.5 text-md text-indigo-800 
                         hover:bg-indigo-50 rounded-md flex items-center justify-between group"
                  data-tag={tag}
                >
                  <span class="capitalize">{tag}</span>
                  <span class="text-xs bg-indigo-100/70 rounded-full px-2 py-0.5 
                             text-indigo-600 group-hover:bg-indigo-200/70">
                    {tagCounts[tag] || 0}
                  </span>
                </button>
              )
            ))}
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Selected Tags Display -->
  <div id="selectedTagsContainer" 
       class="hidden flex-col gap-2 mt-4 p-4 rounded-lg border border-indigo-200">
    <div class="text-slate-500 px-3 py-1.5">Selected tags:</div>
    <div class="flex flex-wrap gap-3 pl-3" id="selectedTagsList"></div>
  </div>
</div>

<style>
  .group-container {
    position: relative;
  }

  .tag-dropdown {
    min-width: 300px;
  }
</style>

<script>
  import { setupTagsHandling } from '../utils/tagsHandler';
  setupTagsHandling();
</script>
